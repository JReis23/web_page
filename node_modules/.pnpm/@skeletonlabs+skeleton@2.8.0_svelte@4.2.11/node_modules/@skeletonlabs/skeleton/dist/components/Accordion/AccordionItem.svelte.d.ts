import { SvelteComponentTyped } from "svelte";
import type { Writable } from 'svelte/store';
import type { Transition, TransitionParams } from '../../index.js';
declare class __sveltets_Render<TransitionIn extends Transition, TransitionOut extends Transition> {
    props(): {
        [x: string]: any;
        /** Set open by default on load.*/
        open?: boolean | undefined;
        /** Provide a unique input id. Auto-generated by default*/
        id?: string | undefined;
        /** Set the auto-collapse mode.*/
        autocollapse?: boolean | undefined;
        /** The writable store that houses the auto-collapse active item UUID.*/
        active?: Writable<string | null> | undefined;
        /** Set the disabled state for this item.*/
        disabled?: boolean | undefined;
        /** Provide classes to set the accordion item padding styles.*/
        padding?: string | undefined;
        /** Provide classes to set the accordion item hover styles.*/
        hover?: string | undefined;
        /** Provide classes to set the accordion item rounded styles.*/
        rounded?: string | undefined;
        /** Provide arbitrary classes to the trigger button region.*/
        caretOpen?: string | undefined;
        /** Provide arbitrary classes to content panel region.*/
        caretClosed?: string | undefined;
        /** Provide arbitrary classes to the trigger button region.*/
        regionControl?: string | undefined;
        /** Provide arbitrary classes to content panel region.*/
        regionPanel?: string | undefined;
        /** Provide arbitrary classes default region.*/
        regionCaret?: string | undefined;
        /** Enable/Disable transitions*/
        transitions?: boolean | undefined;
        /** Provide the transition to used on entry.*/
        transitionIn?: TransitionIn | undefined;
        /** Transition params provided to `transitionIn`.*/
        transitionInParams?: TransitionParams<TransitionIn> | undefined;
        /** Provide the transition to used on exit.*/
        transitionOut?: TransitionOut | undefined;
        /** Transition params provided to `transitionOut`.*/
        transitionOutParams?: TransitionParams<TransitionOut> | undefined;
    };
    events(): {
        click: MouseEvent;
        keydown: KeyboardEvent;
        keyup: KeyboardEvent;
        keypress: KeyboardEvent;
        toggle: CustomEvent<{
            event?: Event | undefined;
            id: string;
            panelId: string;
            open: boolean;
            autocollapse: boolean;
        }>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots(): {
        lead: {};
        summary: {};
        iconClosed: {};
        iconOpen: {};
        content: {};
    };
}
export type AccordionItemProps<TransitionIn extends Transition, TransitionOut extends Transition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['props']>;
export type AccordionItemEvents<TransitionIn extends Transition, TransitionOut extends Transition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['events']>;
export type AccordionItemSlots<TransitionIn extends Transition, TransitionOut extends Transition> = ReturnType<__sveltets_Render<TransitionIn, TransitionOut>['slots']>;
/** The Accordion child element. */
export default class AccordionItem<TransitionIn extends Transition, TransitionOut extends Transition> extends SvelteComponentTyped<AccordionItemProps<TransitionIn, TransitionOut>, AccordionItemEvents<TransitionIn, TransitionOut>, AccordionItemSlots<TransitionIn, TransitionOut>> {
}
export {};
