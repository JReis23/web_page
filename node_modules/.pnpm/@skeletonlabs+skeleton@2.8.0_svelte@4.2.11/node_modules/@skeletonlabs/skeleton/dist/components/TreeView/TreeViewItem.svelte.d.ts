import { SvelteComponentTyped } from "svelte";
import type { TreeViewItem } from '../../index.js';
declare const __propDef: {
    props: {
        [x: string]: any;
        /** Set the radio group binding value.*/
        group?: unknown;
        /** Set a unique name value for the input.*/
        name?: string | undefined;
        /** Set the input's value.*/
        value?: unknown;
        /** Set the input's check state*/
        checked?: boolean | undefined;
        /** Provide children references to support relational checking.*/
        children?: TreeViewItem[] | undefined;
        /** Provide classes to set the horizontal spacing.*/
        spacing?: string | undefined;
        /** Set open by default on load.*/
        open?: boolean | undefined;
        /** Enable tree-view selection*/
        selection?: boolean | undefined;
        /** Enable selection of multiple items.*/
        multiple?: boolean | undefined;
        /** Set the tree item disabled state*/
        disabled?: boolean | undefined;
        /** Set the check state to indeterminate(-).*/
        indeterminate?: boolean | undefined;
        /** Provide classes to set the tree item padding styles.*/
        padding?: string | undefined;
        /** Provide classes to set the tree children indentation*/
        indent?: string | undefined;
        /** Provide classes to set the tree item hover styles.*/
        hover?: string | undefined;
        /** Provide classes to set the tree item rounded styles.*/
        rounded?: string | undefined;
        /** Set the rotation of the item caret in the open state.*/
        caretOpen?: string | undefined;
        /** Set the rotation of the item caret in the closed state.*/
        caretClosed?: string | undefined;
        hyphenOpacity?: string | undefined;
        /** Provide arbitrary classes to the tree item summary region.*/
        regionSummary?: string | undefined;
        /** Provide arbitrary classes to the symbol icon region.*/
        regionSymbol?: string | undefined;
        /** Provide arbitrary classes to the children region.*/
        regionChildren?: string | undefined;
        /** Don't use this prop, workaround until svelte implements conditional slots*/
        hideLead?: boolean | undefined;
        /** Don't use this prop, workaround until svelte implements conditional slots*/
        hideChildren?: boolean | undefined;
        onParentChange?: (() => void) | undefined;
    };
    events: {
        click: MouseEvent;
        keydown: KeyboardEvent;
        keyup: KeyboardEvent;
        toggle: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        lead: {};
        default: {};
        children: {};
    };
};
export type TreeViewItemProps = typeof __propDef.props;
export type TreeViewItemEvents = typeof __propDef.events;
export type TreeViewItemSlots = typeof __propDef.slots;
export default class TreeViewItem extends SvelteComponentTyped<TreeViewItemProps, TreeViewItemEvents, TreeViewItemSlots> {
    get onParentChange(): () => void;
    get group(): unknown;
    /**accessor*/
    set group(_: unknown);
    get name(): string | undefined;
    /**accessor*/
    set name(_: string | undefined);
    get value(): unknown;
    /**accessor*/
    set value(_: unknown);
    get checked(): boolean | undefined;
    /**accessor*/
    set checked(_: boolean | undefined);
    get children(): TreeViewItem[] | undefined;
    /**accessor*/
    set children(_: TreeViewItem[] | undefined);
    get spacing(): string | undefined;
    /**accessor*/
    set spacing(_: string | undefined);
    get open(): boolean | undefined;
    /**accessor*/
    set open(_: boolean | undefined);
    get selection(): boolean | undefined;
    /**accessor*/
    set selection(_: boolean | undefined);
    get multiple(): boolean | undefined;
    /**accessor*/
    set multiple(_: boolean | undefined);
    get disabled(): boolean | undefined;
    /**accessor*/
    set disabled(_: boolean | undefined);
    get indeterminate(): boolean | undefined;
    /**accessor*/
    set indeterminate(_: boolean | undefined);
    get padding(): string | undefined;
    /**accessor*/
    set padding(_: string | undefined);
    get indent(): string | undefined;
    /**accessor*/
    set indent(_: string | undefined);
    get hover(): string | undefined;
    /**accessor*/
    set hover(_: string | undefined);
    get rounded(): string | undefined;
    /**accessor*/
    set rounded(_: string | undefined);
    get caretOpen(): string | undefined;
    /**accessor*/
    set caretOpen(_: string | undefined);
    get caretClosed(): string | undefined;
    /**accessor*/
    set caretClosed(_: string | undefined);
    get hyphenOpacity(): string | undefined;
    /**accessor*/
    set hyphenOpacity(_: string | undefined);
    get regionSummary(): string | undefined;
    /**accessor*/
    set regionSummary(_: string | undefined);
    get regionSymbol(): string | undefined;
    /**accessor*/
    set regionSymbol(_: string | undefined);
    get regionChildren(): string | undefined;
    /**accessor*/
    set regionChildren(_: string | undefined);
    get hideLead(): boolean | undefined;
    /**accessor*/
    set hideLead(_: boolean | undefined);
    get hideChildren(): boolean | undefined;
    /**accessor*/
    set hideChildren(_: boolean | undefined);
    get undefined(): any;
    /**accessor*/
    set undefined(_: any);
}
export {};
